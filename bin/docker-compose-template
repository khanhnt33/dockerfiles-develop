#!/bin/bash

export DOCKER_COMPOSE_TEMPLATE_PATH="$(dirname $(realpath "${BASH_SOURCE[0]}"))"
export DOCKER_COMPOSE_PROJECT_NAME=`basename "$PWD"`
export DUMB_INIT_BIN="$DOCKER_COMPOSE_TEMPLATE_PATH/dumb-init"

if [ ! -e "$DUMB_INIT_BIN" ]; then
    wget -O "$DUMB_INIT_BIN" https://github.com/Yelp/dumb-init/releases/download/v1.2.2/dumb-init_1.2.2_amd64
    chmod +x "$DUMB_INIT_BIN"
fi

BACKGROUND=
if [ "$1" == "-d" ]; then
    BACKGROUND=1
    shift
fi

if [ -z "$1" ]; then
    echo "template name (ex. php) required"
    exit -1
fi

if [ -z "$2" ]; then
    echo "version required"
    exit -1
fi

if [ -z "$3" ]; then
    echo "a hostname is required (or multiple comma-separated without space)"
    exit -1
fi

TEMPLATE="$1"
export VERSION="$2"
export HOST="$3"
export WEB_ROOT="$PWD"
export USER_UID=$(id -u)
export USER_GID=$(id -g)
export USER_NAME=$(id -un)
export USER_GROUP=$(id -gn)

if [ -n "$BACKGROUND" ]; then
    if [ -z "$4" ]; then
        exec docker-compose --file "$DOCKER_COMPOSE_TEMPLATE_PATH/docker-compose.$TEMPLATE.yml" --project-directory "$PWD" --project-name "$DOCKER_COMPOSE_PROJECT_NAME" up -d
    else
        exec docker-compose --file "$DOCKER_COMPOSE_TEMPLATE_PATH/docker-compose.$TEMPLATE.yml" --project-directory "$PWD" --project-name "$DOCKER_COMPOSE_PROJECT_NAME" "${@:4}"
    fi
fi

if [ -z "$4" ]; then
	docker-compose --file "$DOCKER_COMPOSE_TEMPLATE_PATH/docker-compose.$TEMPLATE.yml" --project-directory "$PWD" --project-name "$DOCKER_COMPOSE_PROJECT_NAME" run -T --rm main
    exitcode=$?
    if [ $exitcode -ne 0 ]; then
        docker-compose --file "$DOCKER_COMPOSE_TEMPLATE_PATH/docker-compose.$TEMPLATE.yml" --project-directory "$PWD" --project-name "$DOCKER_COMPOSE_PROJECT_NAME" down
        exit $exitcode
    fi
    exit
fi

exec docker-compose --file "$DOCKER_COMPOSE_TEMPLATE_PATH/docker-compose.$TEMPLATE.yml" --project-directory "$PWD" --project-name "$DOCKER_COMPOSE_PROJECT_NAME" run -u $USER_UID --rm main "${@:4}"
